name: Pharmacy Dashboard CI/CD

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  NODE_VERSION: '20'
  PYTHON_VERSION: '3.12'

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    name: 🧪 Test & Build
    
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4
    
    - name: 🐍 Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'
    
    - name: 📦 Set up Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: 'client/package-lock.json'
    
    - name: 🔧 Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: 🔧 Install Node.js dependencies
      run: |
        cd client
        npm ci --prefer-offline --no-audit
    
    - name: 🧪 Test Python backend imports
      run: |
        python -c "
        try:
            import app
            import pandas as pd
            import flask
            import requests
            print('✅ All backend imports successful')
        except ImportError as e:
            print(f'❌ Import error: {e}')
            exit(1)
        "
    
    - name: 🏗️ Build React frontend
      run: |
        cd client
        npm run build
    
    - name: ✅ Verify build artifacts
      run: |
        test -f client/build/index.html
        test -d client/build/static
        echo "✅ Build artifacts verified successfully"

  integration-test:
    runs-on: ubuntu-latest
    needs: test-and-build
    name: 🚀 Integration Test
    
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4
    
    - name: 🐍 Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'
    
    - name: 🔧 Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: 🏃‍♂️ Start Flask server
      run: |
        echo "🚀 Starting Flask server..."
        export FLASK_ENV=development
        python app.py &
        echo "⏳ Waiting for server to start..."
        sleep 10
    
    - name: 🩺 Health check
      run: |
        echo "🔍 Testing health endpoint..."
        curl -f http://localhost:5000/api/health || exit 1
        echo "✅ Health check passed"
    
    - name: 🧪 Test API endpoints
      run: |
        echo "🔍 Testing API endpoints..."
        curl -f http://localhost:5000/api/config/google-drive-url || exit 1
        echo "✅ Configuration endpoint working"
    
    - name: 🛑 Cleanup
      if: always()
      run: |
        pkill -f "python app.py" || true

  deploy-ready:
    runs-on: ubuntu-latest
    needs: [test-and-build, integration-test]
    name: 🚀 Deploy Ready
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: 🎉 Deployment Ready
      run: |
        echo "🎉 All tests passed! Ready for deployment."
        echo "🌐 Render will automatically deploy from this push."
        echo "📊 Dashboard will be available at your Render URL."
        echo "☁️ Don't forget to configure GOOGLE_DRIVE_CSV_URL if using Google Drive integration."
        echo "🔗 Check your Render dashboard for deployment progress."
